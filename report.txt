ビッグデータ基盤作業を実施した。		
作業の内容は以下になります。		

2017年度
5月報告
	#4267: 17CYモデルの実装	
	#4269: クレンジング-データ成型	
	#4271: 1次分析-基本統計量作成	
	#4273: 1次分析-最大・最小地点集計	

6月報告
	#4448: クラスター環境での実行
		 #4458: 性能調査ログの集計
	#4508: クラスタ環境のスケール
		#4518: logstashでkafkaへデータ投入
	#4619: 最大最小地点ユースケースの受け入れ（作田）
	#4618: データ成形ユースケースの受け入れ（山内）


7月報告
	#4682: テスト方法・方針の検討
		#4683: Sparkモジュールの単体テスト方法検討
		#4688: CIサーバの構築
	#4851: [マスタ]検証トライアル
		#4855: [親タスク]先行作成アプリの概要検討
		#4883: [親タスク]超簡易版ジェネレータの実装
		#4893: [親タスク]トライアル版ストリームサブ_最大最小地点の実装
			#4927: Spark&kafkaのバージョン変更
			#5032: 統計ログの件数、持ち方について


8月報告
	#4944: [親タスク]テスト/検証の実施＆トライアル報告書
		#5041: PoC環境作成
		#5042: 実行結果(エビデンス)の策定と取得方法の検討
	#5140: [テスト標準化]実施内容の保存
	#5141: [テスト標準化]検証エビデンスの取得方法の確認
	#5365: [ジェネレータ]GeneratorのTPSについて、所定の性能を満たすようにする
	#5537: ジェネレータで生成したレコード数(ログ)とkafkaに投入されたレコード数が一致していない
	#5456: [親タスク]設計書プレ版の作成
		#5540: CANデータのパーティションKeyの検討
		#5541: DecodeKafkaフォーマットの検討
	#5381: [親タスク]最大最小地点分析のアプリ開発
		#5389: 最大最小地点_メモリの持たせ方について_データ測定


9月報告
	#5380: [親タスク]車速があがりやすい地点分析のアプリ開発
		#5387: 車速があがりやすい地点_設計＆開発
		#5388: 車速があがりやすい地点_基本性能テスト（サーバ疎通）
		#5395: Window集計のパラメータ検討/調整/考察
	#5381: [親タスク]最大最小地点分析のアプリ開発
		#5731: RDD引継ぎ対応
		#5730: Decode-kafkaのavro対応
	#5382: [親タスク]Scout検索用走行履歴作成の作成
		#5391: Scout検索用走行履歴の作成_設計&開発
		#5392: Scout検索用走行履歴_基本性能測定（サーバ疎通）
	#5382: [親タスク]Scout検索用走行履歴作成の作成
		#5734: Scout検索用走行履歴作成_開発実装
		#5392: Scout検索用走行履歴_基本性能測定（サーバ疎通）
	#5629: ジェネレータの修正
		#5736: Avro対応
		#5737: ジェネレーターの性能改善など
		#5837: NTTDのフォーマットへの対応
10月報告
	#6033: [マスタ]ST_ストリームサブ_クラウド味見
		#6034: [親チケット]ST01_時系列演算（Window集計）y2r2性能測定
			#6038: ST01_基本性能測定
			#6042: ST01_実施手順の作成＆性能評価カルテ枠作成
			#6043: ST01_試行の繰り返し
			#6039: ST01_ラベル数の変更
			#6040: ST01_Window集計幅の変更
			#6041: ST01_アプリ多重度の変更
		#6035: [親チケット]ST02_大規模テーブルJoin(最大最小)y2r2性能測定
			#5739: 課題 基本統計量ログのシャッフルが毎バッチ発生している
			#6044: ST02_基本性能測定
			#6047: ST02_実施手順の作成＆性能評価カルテ枠作成
			#6049: ST02_キャッシュ設定の変更(offheap&memoryonlyser)
			#6048: ST02_試行の繰り返し
			#6045: ST02_運用面での動作確認
			#6046: ST02_基本統計量のメモリ利用量
		#6036: [親チケット]ST03_二次ストア更新（scout履歴書き込み）
			#6051: ST03_基本性能測定
			#6053: ST03_実施手順の作成＆性能評価カルテ枠作成
			#6054: ST03_試行の繰り返し
			#6052: ST03_Redisの基礎値取得
		#6037: [親チケット]ST_MIX_アプリケーションミックスの性能測定
			#6055: ST_MIX_Mixの基本性能測定
		#6370: [親チケット]ST_STREAM_チューニングパラメータ検討
			#6371: ST_STREAM_設定値チューニング
			#6375: ジェネレータの初期出発地を東京駅以外も設定できるようにする
			#6376: 大規模テーブルJoinの統計量ログを全国版を作成
		#6373: NTT-Dフォーマット変更対応
11月報告
	#6387: [親タスク]オンプレ環境味見（ＳＴ）
		#6415: STオンプレ_基盤設定値の確認＆反映
		#6417: STオンプレ_ST01～ST03各アプリのオンプレ環境での実行
		#6418: STオンプレ_性能結果確認方法＆プレ試行
		#6419: STオンプレ_性能測定ケース表の作成
	#6490: [親タスク]ST_サブ内検証(前半)
		#6874: [親タスク]パーティション分割の試行＋テスト実施
		#6491: [親タスク]ST01_基準性能測定
			#6495: ST01_0101_限界性能評価
12月報告
	#6490: [親タスク]ST_サブ内検証(前半)
		#6491: [親タスク]ST01_基準性能測定
			#6495: ST01_0101_限界性能評価
			#6496: ST01_0102_kafkaパーティション数
			#6497: ST01_0103_kafka圧縮有無
			#6498: ST01_0104_Sparkバッチインターバル
			#6499: ST01_0301_Window幅の影響評価
			#6500: ST01_0105_エグゼキュータ数Core数調整
			#6501: ST01_0106_処理対象ラベル数の変更
2018年度
01月報告
	#6490: [親タスク]ST_サブ内検証(前半)
		#6492: [親タスク]ST02_基準性能測定
			#6502: ST02_0101_限界性能評価
			#6503: ST02_0102_kafkaパーティション数
			#6507: ST02_0106_処理対象ラベル数の変更
			#6508: ST02_0301_RDDパーティション数
			#6509: ST02_0302_RDDキャッシュオプション
		#6493: [親タスク]ST03_基準性能測定
			#6510: ST03_0101_限界性能評価
			#6515: ST03_0106_処理対象ラベル数の変更

02月報告
	#6490: [親タスク]ST_サブ内検証(前半)
		#6492: [親タスク]ST02_基準性能測定
			#6502: ST02_0101_限界性能評価
			#6507: ST02_0106_処理対象ラベル数の変更
		#6493: [親タスク]ST03_基準性能測定
			#6510: ST03_0101_限界性能評価
			#6516: ST03_0301_二次ストア書き込み処理性能
		#7270: [親タスク]変動要素測定（ST01～ST03)TYMタスク 
			#7272: [親タスク]変動要素測定のためのデータ準備活動TYMタスク 
			#7271: [親タスク]アプリ多重度＆Mix性能測定TYMタスク 
			#7273: [親タスク]ST02基本統計量のデータ差し替え時挙動の確認TYMタスク 
			#7274: [親タスク]変動要素：ラベル数の変更TYMタスク 
			#7275: [親タスク]変動要素測定：送信時間間隔の変更
	TYM-DMP
		・IMDG製品調査


03月報告
	TYM-DMP(ApacheIgnite深堀調査)
		・ApacheIgnite環境構築
		・機能検証
			・AffinityKey、Collocation
			・GeoSpatial
			・自動リバランス
		・Key、データ構造について検討
			・GeoHash
		・サンプルユースケースアプリ
			・Key,Valueの検索性能
			・Indexの検索性能
			・GeoSpatialマッチング性能
04月報告
	#8001: TYM-新・物理量変換の試作TYMタスク 
		#8002: データ準備TYMタスク 
			#8008: binaryのkafka登録処理TYMタスク 
		#8003: 新物理量変換の実装TYMタスク 
			#8004: パースメイン処理TYMタスク 
			#8005: ビットアサイン変換処理(can60)TYMタスク 
			#8006: 100ms補間処理TYMタスク 
		#8112: ドキュメント作成TYMタスク 
	TYM-ラプラス方式検討
		実行環境・手順調査
			オルソ画像からの地図作成

05月報告
	TYM-Laplace 
		#7989: TYM-ラプラス方式検討Ph.1 
			#8273: 地物抽出アルゴリズム動作確認 
			#8275: 地物抽出アルゴリズムQA 
			#8280: Cosmic→地物抽出動作確認 
			#8355: 地物抽出アルゴリズムドキュメント作成 
			#8356: Cosmicアルゴリズムドキュメント作成 
	TYM-物理量変換 
		#8001: TYM-新・物理量変換の試作 
			#8002: データ準備 
				#8007: 富士通ジェネレータ調査 
			#8003: 新物理量変換の実装 
		#8274: 物理量変換_基本処理の作成 
			#8004: パースメイン処理 
			#8005: ビットアサイン変換処理(can60) 
			#8008: binaryのkafka登録処理 
			#8006: 100ms補間処理 
			#8112: ドキュメント作成(4/25-ITC様連携向け) 
		#8277: 物理量変換_拡張性対応 
			#8276: ビットアササインテーブルの仕様検討 
				#8352: csvファイルフォーマット検討 
			#8279: ドキュメント作成（5/16向け） 
				#8463: フィードバック 
			#8353: 実装 
				#8278: Streamアプリケーションとの連携 
				#8354: BitAssignTableモジュールの自動生成 
				#8409: ライブラリ化 
		#8462: 性能試験 
			#8412: 性能試験について案だし 
			#8464: 事前準備 
				#8466: BitAssign変換モジュール改修 
				#8465: kafka投入モジュール改修 
				#8517: サンプルアプリ改修 
				#8518: データ作成 
					#8467: kafka投入用データ作成 
					#8519: raw_kafkaで投入したデータ(vin)がkafkaで分散するか確認 
					#8520: raw_kafkaから4000tpsでデータ投入を確認 
			#8522: 1次試作版ST01の実行確認 
			#8523: テスト計画の検討 
				#8526: 性能試験計画の作成 
				#8524: ascファイル内のラベル(CanId)を把握

06月報告
	TYM-Laplace 
		標識信号機認識アルゴリズム解析
			ドキュメント作成
	TYM-物理量変換 
		#8462: 性能試験 
			#8464: 事前準備 
				#8466: BitAssign変換モジュール改修 
				#8465: kafka投入モジュール改修 
				#8517: サンプルアプリ改修 
				#8518: データ作成 
					#8467: kafka投入用データ作成 
					#8519: raw_kafkaで投入したデータ(vin)がkafkaで分散するか確認 
					#8520: raw_kafkaから4000tpsでデータ投入を確認 
				#8522: 1次試作版ST01の実行確認 
				#8577: サンプルアプリでラベル読み捨て対応 
				#8570: 100ラベル用のビットアサイン変換csv作成 
			#8523: テスト計画の検討 
				#8526: 性能試験計画の作成 
				#8524: ascファイル内のラベル(CanId)を把握 
				#8575: オンプレケース表作成 
			#8625: 試験実施 
				#8626: 味見実行 
					#8627: 基準性能測定 
					#8628: ラベル数変更による影響 
					#8629: アプリケーション同居時の性能 
				#8676: 課題 
					#8675: 実行時にslave001.st01.localのcpuのみSystemが異様に高い 
					#8715: SparkUIで5分毎にマイクロバッチ間隔と別のjobが存在する 
					#8742: 2ステージ以降でtask数がケース毎に違う 
					#8756: 処理するラベルによってShuffleSizeの差が大きい 
				#8726: 測定実施 
					#8727: 基準性能 
					#8728: ラベル数変更 
					#8729: アプリケーション同居
07月報告
	TYM-物理量変換 
	#8875: 性能試験#2
		#8866: アプリケーション改修
		#8865: Raw_kafkaデータ再作成
		#8876: （新）単体性能の確認
		#8877: データの内容の確認（比較）
		#8878: （新）ラベル種類増幅_単体テスト
		#8880: （新）アプリ同居型テスト
	#8881: 性能試験（連結）
		#8885: NTTデータ環境接続準備
		#8934: 連結疎通確認
		#8935: 課題
			#8936: アノテートしたデータに想定しないデータが付いている
			#8937: NTTD環境ジェネレータのtps向上
			#8939: アノテーションヘッダを性能試験データにも付与するよう対応する
			#9082: hdfs書き込み処理にてmasterのdisk負荷が発生する
	#9018: 連結テストケース/方針の検討
	#9020: 連結測定準備＃２
	#9084: 連結テスト測定実施

08月報告
TYM-GPU有効利用
	#9245: [マスタ]GPUサーバの準備/構築
	#9370: [マスタ]事前準備
		#9280: kafkaへの動画送受信POC取り込み
	#9371: [マスタ]案0
		#9377: AWS環境構築
			#9382: GPUインスタンス構築
			#9383: spark実行環境構築
		#9378: アプリ開発
			#9381: DetectImageの取り込み
			#9455: CANパース処理追加
		#9379: 味見実行
			#9445: GPUのメトリクス収集
	#9372: [マスタ]案1
		#9246: AWS環境構築
			#9278: APIサーバの構築
			#9279: spark実行環境構築
	#9373: [マスタ]案2
		#9281: フィジビリティ調査-spark処理からyarnのnode labelを切り替えられるか
	#9375: [課題]
		#9311: [課題] ansibleからGPUインスタンスの作成ができない

09月報告
TYM-GPU有効利用
	#9561: [マスタ]案０案１の味見から基礎値測定まで
		#9378: アプリ開発
			#9381: DetectImageの取り込み
			#9455: CANパース処理追加
		#9379: 味見実行
			#9445: GPUのメトリクス収集
		#9539: 案1 gangliaグラフpng取得スクリプト
		#9552: 案1 画像取得の回数を減らす（20秒動画で2回）
		#9576: 案1 kafkaへ動画を投入する速度の調整
		#9613: 案０、案１の基礎値測定を完了させる
		#9614: GPUの利用率について、１秒以下の間隔で取得が可能か調査/確認
		#9540: Tensorflow呼び出しだけでCPUが100%に張り付く
		#9608: Spark Structured Streamingがdeploy-mode clusterで実行時エラー
	#9529: [マスタ]案4
		#9530: 案4 調査-yarn 3.1.0のGPUリソーススケジュールについて
		#9537: 案4 ansibleのhadoopを3.1.1にUpgrade
		#9607: 案４のhadoopバージョンアップに関するansbile整理
	#9375: [課題]
		#9311: [課題] ansibleからGPUインスタンスの作成ができない
		#9518: [課題] 案０GPU1台構成のときnum-executor=3でspark-submtできない

10月報告
TYM-GPU有効利用
	#9561: [マスタ]案０案１の味見から基礎値測定まで
		#9615: 案０，案１の基礎状態に対し、GPUの負荷を上げた版、を測定する
		#9618: 複数画像のtensolflow処理を一括で行うバージョン作成
	#9529: [マスタ]案4
		#9617: 案４のアプリケーション動作確認
		#9803: 案4 GPUリソース状況を確認するためにUI2を調査
		#9810: 案4 GPUリソースの分離(CGropu)による動作を確認
		#9921: 案4 gpuリソース設定をansibleに取り込み
	#9616: [マスタ]案０＆案１本格測定＆チューニング
		#9675: ケースパターン表の仮作成
		#9694: 試験実施の手順化
		#9660: 案０-4 Canの間隔を20sに変更する
		#9677: エグゼキュータ数をオーバコミットした時の動作確認
		#9678: 案１：　API化 ＋ continuous-processing
		#9679: 物理量変換ラベル数の変更パターンの測定
		#9695: 案０案１ ケース0101：kafkaパーティション数
		#9680: GPU & CPU 負荷変更パターンの測定
			#9820: GPUCPU負荷の変更について、GPUが溢れてきたため、GPU３台構成の確認を行う
		#9801: 案0 ContinuousProcessingの案１との比較
		#9804: 案１ continuousProcessingによるlatency低下の数値化
	#9375: [課題]
		#9540: Tensorflow呼び出しだけでCPUが100%に張り付く
		#9608: Spark Structured Streamingがdeploy-mode clusterで実行時エラー
		#9687: Continuous Processingでorg.apache.spark.SparkException: data read failed
		#9696: 案1　APIへのリクエストまでに待ちの時間が発生する
	#9922: 案0-1 試験実施手順の更新
	#9927: DetectStreaming、SSD-APIServerのドキュメント整理

11月報告
TYM-全体最適タギング
	#9945: [マスタ]事前調査＆準備
		#9964: 曇りガラス識別アルゴリズムの確認
			#10016: scikit-learnのモデルをtensorflow servingで動かす
			#10076: [曇りガラス識別]PySkarkでの動作確認
		#9965: TensorFlowServingの調査
			#10091: tensorflowServingで複数モデルを使用する方法調査
		#9966: APIサーバロードバランサの調査
		#10061: サービスメッシュあたりの机上調査
	#10084: [マスタ] ポーティング検討・調査
		#10085: アルゴリズムの選定
		#10086: モジュールの構成検討
		#10087: 処理基盤の概要図作成
		#10095: タギングアルゴリズムの候補検討
		#10116: アルゴリズムの動作確認
			#10117: レーンかすれ検出
			#10118: 信号機色識別
			#10123: 黒ボデー識別
			#10124: 気象
			#10125: 周囲の土地利用用途（日本、米国）
			#10126: 水たまり検出
			#10129: 路上落下物検出
			#10130: カーブ
			#10131: 勾配変化
			#10132: 交差点（その１）
			#10133: 交差点（その２）
			#10134: 駐車場（その１）
			#10135: 駐車場（その２）
			#10150: レンズ曇り検出

12月報告
TYM-全体最適タギング
	#10084: [マスタ] ポーティング検討・調査
		#10116: アルゴリズムの動作確認
			#10119: 信号機検出
			#10122: 霧シーン識別
		#10193: 各モジュールと、サンプルファイルのチェックイン
	#10208: [マスタ] 方式検討・調査
		#10209: DLモデルの変換フィジビリティ
		#10210: [モデル変換]chainerから変換
	#10211: [マスタ]タギング基盤の機能要件・非機能要件の検討
		#10212: 機能要件検討
			#10214: DLフレームワークへの対応検討
			#10215: Python/CPUアルゴリズムの動作
		#10213: 非機能要件検討
			#10216: 共通処理の集約化
			#10217: ノード内複数GPUへの均等な分散
			#10218: ノード間の負荷分散
			#10219: バッチ/リアルタイム間のリソース有効活用
			#10220: 各アプリごと性能保証
			#10221: 基本性能要件（リアル・バッチ）
	#10240: [マスタ]コンテナ環境構築
		#10253: AWSインスタンス作成
		#10245: [課題]
			#10246: [課題] AWSでp2.8xlargeインスタンス数の制限
		#10248: kubernetes構築
		#10249: pod間通信ネットワークの選定
		#10250: kubernetes基本機能確認
			#10281: オートスケーリング（HorizontalPodAutoscaler)動作確認
			#10282: プライオリティの動作確認
		#10276: DockerRegistry構築
		#10255: タグDB構築
		#10283: ジェネレータ準備
	#10241: [マスタ]ポーティング
		#10252: 02_信号機色識別のAPIサーバ
		#10256: アルゴリズム選定
		#10259: APIサービス-アルゴリズム実装
			#10268: 信号機検出APIサービス
			#10269: レンズ曇り検出APIサービス
			#10270: 勾配変化APIサービス

2019年度
01月報告
TYM-全体最適タギング
	#10240: [マスタ]コンテナ環境構築
		#10251: ロードバランサ構築
		#10254: 管理ツール調査
		#10284: 疎通確認
	#10241: [マスタ]ポーティング
		#10257: Sparkアプリ-リアル処理実装
			#10260: タギングアプリ(信号機検出)
			#10261: タギングアプリ(レンズ曇り検出)
			#10262: タギングアプリ(勾配変化)
			#10263: フロー制御アプリ
		#10258: Sparkアプリ-バッチ処理実装
			#10264: タギングアプリ(信号機検出)
			#10265: タギングアプリ(レンズ曇り検出)
			#10266: タギングアプリ(勾配変化)
			#10267: フロー制御アプリ
			#10273: データ保存処理
	#10271: [マスタ]測定
		#10272: 測定シナリオの検討

